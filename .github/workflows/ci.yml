name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'maven'

      - name: Build and test
        run: ./mvnw -B -ntp clean verify

      - name: Spotless check (format)
        run: ./mvnw -B -ntp spotless:check

      - name: Upload jar artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: eventscraper-jar
          path: target/*.jar

  docker-image:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        if: env.REGISTRY && env.REGISTRY_USER && env.REGISTRY_PASSWORD
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
        env:
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        run: |
          TAG=${{ github.sha }}
          docker build -t eventscraper:${TAG} .

      - name: Push image
        if: env.REGISTRY && env.REGISTRY_USER && env.REGISTRY_PASSWORD
        run: |
          TAG=${{ github.sha }}
          IMAGE=${{ secrets.DOCKER_REGISTRY }}/eventscraper:${TAG}
          docker tag eventscraper:${TAG} ${IMAGE}
          docker push ${IMAGE}
        env:
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
